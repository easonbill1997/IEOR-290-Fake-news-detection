{"map":"{\"version\":3,\"sources\":[\"/Users/shengjiebian/Desktop/290UI/ui/src/App.js\",\"/Users/shengjiebian/Desktop/290UI/ui/src/serviceWorker.js\",\"/Users/shengjiebian/Desktop/290UI/ui/src/index.js\"],\"names\":[\"App\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"handleChange\",\"event\",\"value\",\"target\",\"name\",\"formData\",\"state\",\"setState\",\"handlePredictClick\",\"isLoading\",\"fetch\",\"headers\",\"Accept\",\"Content-Type\",\"method\",\"body\",\"JSON\",\"stringify\",\"then\",\"response\",\"json\",\"result\",\"handleCancelClick\",\"NewsBody\",\"Subject\",\"Speaker\",\"JobTitle\",\"Party\",\"react_default\",\"a\",\"createElement\",\"Container\",\"className\",\"Form\",\"Row\",\"Group\",\"as\",\"Col\",\"Label\",\"Control\",\"type\",\"placeholder\",\"onChange\",\"Button\",\"block\",\"variant\",\"disabled\",\"onClick\",\"id\",\"Component\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from 'react';\\nimport './App.css';\\nimport Form from 'react-bootstrap/Form';\\nimport Col from 'react-bootstrap/Col';\\nimport Container from 'react-bootstrap/Container';\\nimport Row from 'react-bootstrap/Row';\\nimport Button from 'react-bootstrap/Button';\\nimport 'bootstrap/dist/css/bootstrap.css';\\n\\nclass App extends Component {\\n\\n  constructor(props) {\\n    super(props);\\n\\n    this.state = {\\n      isLoading: false,\\n      formData: {\\n        NewsBody: 'almost 100,000 people left Puerto Rico last year',\\n        Subject: 'economy',\\n        Speaker: 'jack-lew',\\n        JobTitle: 'Treasury secretary',\\n        Party: 'democrat'\\n      },\\n      result: \\\"\\\"\\n    };\\n  }\\n\\n  handleChange = (event) => {\\n    const value = event.target.value;\\n    const name = event.target.name;\\n    var formData = this.state.formData;\\n    formData[name] = value;\\n    this.setState({\\n      formData\\n    });\\n  }\\n\\n  handlePredictClick = (event) => {\\n    const formData = this.state.formData;\\n    this.setState({ isLoading: true });\\n    fetch('http://127.0.0.1:5000/prediction/', \\n      {\\n        headers: {\\n          'Accept': 'application/json',\\n          'Content-Type': 'application/json'\\n        },\\n        method: 'POST',\\n        body: JSON.stringify(formData)\\n      })\\n      .then(response => response.json())\\n      .then(response => {\\n        this.setState({\\n          result: response.result,\\n          isLoading: false\\n        });\\n      });\\n  }\\n\\n  handleCancelClick = (event) => {\\n    this.setState({ result: \\\"\\\" });\\n  }\\n\\n  render() {\\n    const isLoading = this.state.isLoading;\\n    const formData = this.state.formData;\\n    const result = this.state.result;\\n\\n\\n    return (\\n      <Container>\\n        <div>\\n          <h1 className=\\\"title\\\">Fake News Detection</h1>\\n        </div>\\n        <div className=\\\"content\\\">\\n          <Form>\\n            <Form.Row>\\n              <Form.Group as={Col}>\\n                <Form.Label>News Body</Form.Label>\\n                <Form.Control \\n                  type=\\\"text\\\" \\n                  placeholder=\\\"News Body\\\"\\n                  name=\\\"NewsBody\\\"\\n                  value={formData.NewsBody}\\n                  onChange={this.handleChange} />\\n              </Form.Group>\\n              <Form.Group as={Col}>\\n                <Form.Label>Subject</Form.Label>\\n                <Form.Control \\n                  type=\\\"text\\\" \\n                  placeholder=\\\"Subject\\\"\\n                  name=\\\"subject\\\"\\n                  value={formData.Subject}\\n                  onChange={this.handleChange} />\\n              </Form.Group>\\n            </Form.Row>\\n            <Form.Row>\\n              <Form.Group as={Col}>\\n                <Form.Label>Speaker</Form.Label>\\n                <Form.Control \\n                  type=\\\"text\\\"\\n                  placeholder=\\\"Speaker\\\"\\n                  name=\\\"speaker\\\"\\n                  value={formData.Speaker}\\n                  onChange={this.handleChange}>\\n                </Form.Control>\\n              </Form.Group>\\n              <Form.Group as={Col}>\\n                <Form.Label>Job Title</Form.Label>\\n                <Form.Control \\n                  type=\\\"text\\\"\\n                  placeholder=\\\"Job Title\\\"\\n                  name=\\\"JobTitle\\\"\\n                  value={formData.JobTitle}\\n                  onChange={this.handleChange}>\\n                </Form.Control>\\n              </Form.Group>\\n              <Form.Group as={Col}>\\n                <Form.Label>Party</Form.Label>\\n                <Form.Control \\n                  type=\\\"text\\\"\\n                  placeholder=\\\"Party\\\"\\n                  name=\\\"party\\\"\\n                  value={formData.Party}\\n                  onChange={this.handleChange}>\\n                </Form.Control>\\n              </Form.Group>\\n            </Form.Row>\\n            <Row>\\n              <Col>\\n                <Button\\n                  block\\n                  variant=\\\"success\\\"\\n                  disabled={isLoading}\\n                  onClick={!isLoading ? this.handlePredictClick : null}>\\n                  { isLoading ? 'Making prediction' : 'Predict' }\\n                </Button>\\n              </Col>\\n              <Col>\\n                <Button\\n                  block\\n                  variant=\\\"danger\\\"\\n                  disabled={isLoading}\\n                  onClick={this.handleCancelClick}>\\n                  Reset prediction\\n                </Button>\\n              </Col>\\n            </Row>\\n          </Form>\\n          {result === \\\"\\\" ? null :\\n            (<Row>\\n              <Col className=\\\"result-container\\\">\\n                <h5 id=\\\"result\\\">{result}</h5>\\n              </Col>\\n            </Row>)\\n          }\\n        </div>\\n      </Container>\\n    );\\n  }\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{21:function(e,a,t){e.exports=t(32)},26:function(e,a,t){},27:function(e,a,t){},32:function(e,a,t){\"use strict\";t.r(a);var n=t(0),l=t.n(n),r=t(13),o=t.n(r),c=(t(26),t(14)),i=t(15),s=t(19),u=t(16),m=t(20),h=(t(27),t(5)),d=t(6),p=t(17),E=t(9),b=t(10),C=(t(28),function(e){function a(e){var t;return Object(c.a)(this,a),(t=Object(s.a)(this,Object(u.a)(a).call(this,e))).handleChange=function(e){var a=e.target.value,n=e.target.name,l=t.state.formData;l[n]=a,t.setState({formData:l})},t.handlePredictClick=function(e){var a=t.state.formData;t.setState({isLoading:!0}),fetch(\"http://127.0.0.1:5000/prediction/\",{headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},method:\"POST\",body:JSON.stringify(a)}).then(function(e){return e.json()}).then(function(e){t.setState({result:e.result,isLoading:!1})})},t.handleCancelClick=function(e){t.setState({result:\"\"})},t.state={isLoading:!1,formData:{NewsBody:\"almost 100,000 people left Puerto Rico last year\",Subject:\"economy\",Speaker:\"jack-lew\",JobTitle:\"Treasury secretary\",Party:\"democrat\"},result:\"\"},t}return Object(m.a)(a,e),Object(i.a)(a,[{key:\"render\",value:function(){var e=this.state.isLoading,a=this.state.formData,t=this.state.result;return l.a.createElement(p.a,null,l.a.createElement(\"div\",null,l.a.createElement(\"h1\",{className:\"title\"},\"Fake News Detection\")),l.a.createElement(\"div\",{className:\"content\"},l.a.createElement(h.a,null,l.a.createElement(h.a.Row,null,l.a.createElement(h.a.Group,{as:d.a},l.a.createElement(h.a.Label,null,\"News Body\"),l.a.createElement(h.a.Control,{type:\"text\",placeholder:\"News Body\",name:\"NewsBody\",value:a.NewsBody,onChange:this.handleChange})),l.a.createElement(h.a.Group,{as:d.a},l.a.createElement(h.a.Label,null,\"Subject\"),l.a.createElement(h.a.Control,{type:\"text\",placeholder:\"Subject\",name:\"subject\",value:a.Subject,onChange:this.handleChange}))),l.a.createElement(h.a.Row,null,l.a.createElement(h.a.Group,{as:d.a},l.a.createElement(h.a.Label,null,\"Speaker\"),l.a.createElement(h.a.Control,{type:\"text\",placeholder:\"Speaker\",name:\"speaker\",value:a.Speaker,onChange:this.handleChange})),l.a.createElement(h.a.Group,{as:d.a},l.a.createElement(h.a.Label,null,\"Job Title\"),l.a.createElement(h.a.Control,{type:\"text\",placeholder:\"Job Title\",name:\"JobTitle\",value:a.JobTitle,onChange:this.handleChange})),l.a.createElement(h.a.Group,{as:d.a},l.a.createElement(h.a.Label,null,\"Party\"),l.a.createElement(h.a.Control,{type:\"text\",placeholder:\"Party\",name:\"party\",value:a.Party,onChange:this.handleChange}))),l.a.createElement(E.a,null,l.a.createElement(d.a,null,l.a.createElement(b.a,{block:!0,variant:\"success\",disabled:e,onClick:e?null:this.handlePredictClick},e?\"Making prediction\":\"Predict\")),l.a.createElement(d.a,null,l.a.createElement(b.a,{block:!0,variant:\"danger\",disabled:e,onClick:this.handleCancelClick},\"Reset prediction\")))),\"\"===t?null:l.a.createElement(E.a,null,l.a.createElement(d.a,{className:\"result-container\"},l.a.createElement(\"h5\",{id:\"result\"},t)))))}}]),a}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(l.a.createElement(C,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[21,1,2]]]);","extractedComments":[]}